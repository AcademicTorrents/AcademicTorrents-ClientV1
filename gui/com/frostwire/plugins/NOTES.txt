2008.09.26
By Gubatron.

How the fetching and updating of plugins occur
==============================================

  FrostWire will connect to http://plugins.frostwire.com/list/

  The server will give FrostWire an XML document containing all the manifests of all the plugins available.
  Each manifest however has an URL to the original manifest which is mantained by the developer of the plugin.

  We'll send all FrostWires to plugins.frostwire.com (which will be a mirrored dns to withstand with the load
  of so many peers)

  Once the user downloads the manifests from plugins.frostwire.com, it will copy each manifest as a .manifest
  file on the $INSTALL_DIR/plugins/manifests/ folder. Using the name of the plugin. (No 2 plugins can have the same name)

  We'll see on the user's machine something like this:

  plugins/manifests/foo.xml
  plugins/manifests/bar.xml

- Every X days frostwire will ping http://plugins.frostwire.com/list to see if there have been any
  updates to the manifests. This will mark in the UI on the Plugin Manager Window that the plugin
  has new updates available. We say X days so that we don't have every single FrostWire hitting
  the plugin servers every day everytime they open FrostWire the first time.

  The user should be able to set up frostwire to download updates automatically.

How does a developer push an update?
====================================

  If a developer has updated the URL where it keeps it's manifest
  they can request us to update our central manifests (mirrored)
  by doing a request to:

  http://plugins.frostwire.com/update/<pluginname>/<secretkey>

  If the XML on their end is well formed and corresponds to what we have in our end
  then we'll send a positive response, e.g. 1 - Manifest updated. Please wait a few seconds while your changes propagate across all mirrors.

  The effect will be that all the users who have a turn at checking at our manifest during the next hour will
  start receiving the updated manifests, and will prompt those users who have their plugin installed
  about a new update (or frostwire will download the update automatically)

  At the turn of max X days, all users that have opened frostwire will receive the updated manifest and keep the last version
  of the manifest only, if FrostWire if their frostwire is compatible with that version of the plugin.

How does plugins.frostwire.com keep the manifests?
==================================================

plugins.frostwire.com will be a distributed web application.
Each instance will run along a memcached server that will keep
the latest valid manifests for each plugin.

It will also keep on disk copies of the manifests in case something happens
and it needs to recover the information about the latest manifests.

Each instance of plugins.frostwire.com will have a plugins.conf file that
will tell it if about the other instances. That way, if any instance receives
an update request from a developer, it's in charge of notifying the other
instances (listed on the config file) about the needed upgrade.

The notification will be as simple as a request like
http://plugins5.frostwire.com/peer-update/<plugin>/<secretKey>

This way the peer receiving the update request will know that it doesn't need
to forward the request to other plugins server.

Each instance will be mapped in lighttpd as 2 different hosts:

plugins.frostwire.com  and  plugins<number>.frostwire.com

Each server will have on its /etc/hosts file internal mappings of each plugins.

At the beginning we'll have 4 servers only

plugins1.frostwire.com main1 
plugins2.frostwire.com main2
plugins3.frostwire.com main3
pluginsny1.frostwire.com newyork1

This IP/Name mapping as said, will only exist on /etc/hosts on those machines, no need
to overwhelm the public DNS server with more DNS mappings.


 SOME THOUGHTS:
 =============
  - No need for License attributes. All plugins should be free, period.
  Whoever wants to have a business around plugins should figure out how to
  do it around a free plugin bazar.
  - Server side: When a developer requests for a manifest update, the server
  that downloads the new manifest, will probably update the plugin, and to keep
  things simple, it could just invoke rsync on the other servers, or commit the
  changes in subversion. There should be a post-commit hook that invokes
  svn update on the plugins.frostwire.com/plugins folder on the other machines.