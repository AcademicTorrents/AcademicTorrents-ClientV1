<?xml version="1.0" encoding="UTF-8"?>

<project name="lw-common" basedir="." default="compile-src">

	<description>
        FrostWire component 'common'.
        This component is required for every other component and contains
        the most common functionality shared by every component.
    </description>

    <import file="build-macros.xml" />

    <target name="initialize" unless="initialized.common">
        <do.setup-properties component="common">
            <src-classpath>

            </src-classpath>
        </do.setup-properties>
    </target>

    <target name="clean" depends="initialize">
        <do.clean component="common"/>
    </target>

    <target name="compile" depends="initialize">
        <do.compile component="common"/>
    </target>

    <target name="compile-src" depends="initialize">
        <mkdir dir="${limewire.home}/components/common/build/classes"/>
        <property name="limewire.core.home"           location="${limewire.home}/core"/>
        <property name="build.limewire.core.classes"  location="${limewire.core.home}"/>
        <path id="build.limewire.core.classpath">
            <fileset dir="${limewire.lib.jars}" includes="**/*.jar" excludes="tests/**" />
            <path refid="build.limewire.components.classes.core" />
        </path>

        <javac destdir="${limewire.home}/components/common/build/classes" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}" encoding="ISO-8859-1" source="${compile.source}" target="${compile.target}" srcdir="${limewire.home}/components/common/src/main/java" excludes="examples/**" includeantruntime="false">
            <classpath refid="build.limewire.core.classpath" />
            <src path="${limewire.home}/common/components/gson" />
            <src path="${limewire.home}/common/components/json" />
            <src path="${limewire.home}/common/components/apache" />
            <src path="${limewire.home}/common/components/jmdns" />
            <src path="${limewire.home}/common/components/jdownloader" />
            <src path="${limewire.home}/common/components/minicastle" />
            <src path="${limewire.home}/common/components/mp4parser"/>
            <src path="${limewire.home}/common/vuze/azureus2/src" />
            <src path="${limewire.home}/common/vuze/azureus3/src" />
            <src path="${limewire.home}/common/vuze/plugins" />
            <exclude name="**/bouncycastle/**" />
            <exclude name="**/jman/**" />
            <exclude name="**/swing/**" />
            <exclude name="**/swt/**" />
            <exclude name="**/systray/**" />
            <exclude name="**/tests/**" />

            <src path="${limewire.home}/common/components/core" />
        </javac>
        <!--this next line is the only thing that used to be here, but I don't see a way to pass the source paths of common/components before compiling
            so I've basically done the javac ant task manually here, including everything from commons/components to make sure
            component/commons (yeah I know) won't miss any thing -->
        <!--<do.compile-src component="common"/>-->
    </target>

    <target name="clean-src" depends="initialize">
        <do.clean-src component="common" />
    </target>

    <target name="compile-tests" depends="initialize, compile-src">
        <do.compile-tests component="common" />
    </target>

    <target name="clean-tests" depends="initialize">
        <do.clean-tests component="common" />
    </target>

    <target name="test" if="class" depends="initialize, compile">
        <do.test component="common" class="${class}" />
    </target>

    <target name="test-package" if="package" depends="initialize, compile">
        <do.test-package component="common" package="${package}"/>
    </target>

    <target name="test-all" depends="initialize, compile">
        <do.test-all component="common"/>
    </target>

    <target name="jar" depends="initialize, compile-src">
        <do.jar component="common"/>
    </target>

    <target name="javadoc" depends="initialize, compile-src">
        <do.javadoc component="common"/>
    </target>

    <target name="clean-dist" depends="initialize">
        <do.clean-dist component="common"/>
    </target>

    <target name="with.clover" depends="initialize">
        <do.clover-setup component="common"/>
    </target>

    <target name="clover2html" depends="initialize">
        <do.clover2html component="common"/>
    </target>

</project>
